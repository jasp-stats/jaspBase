% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/column-types.R, R/readDataSet.R
\name{column-types}
\alias{column-types}
\alias{jaspScale}
\alias{isJaspScale}
\alias{asJaspScale}
\alias{jaspOrdinal}
\alias{isJaspOrdinal}
\alias{asJaspOrdinal}
\alias{jaspNominal}
\alias{isJaspNominal}
\alias{isJaspText}
\alias{asJaspNominal}
\alias{jasp2r}
\alias{r2jasp}
\alias{setDataSet}
\alias{getDataSet}
\alias{dataSetColumnSpecification}
\title{JASP Column Types}
\usage{
jaspScale(x = double())

isJaspScale(x)

asJaspScale(x, ...)

jaspOrdinal(x = integer(), values = sort(unique(x)), labels = values)

isJaspOrdinal(x)

asJaspOrdinal(x, ...)

jaspNominal(x = integer(), values = sort(unique(x)), labels = values)

isJaspNominal(x)

isJaspText(x)

asJaspNominal(x, ...)

jasp2r(x)

r2jasp(x)

setDataSet(dataset)

getDataSet()

dataSetColumnSpecification()
}
\arguments{
\item{x}{object to be coerced or tested.}

\item{...}{not used.}

\item{values}{set of possible values (similar to \code{levels} in \code{\link[=factor]{factor()}}).}

\item{labels}{set of labels of the values (similar to \code{labels} in \code{\link[=factor]{factor()}}).}

\item{dataset}{Data frame or tibble that contains data.}
}
\description{
Columns types in JASP.
}
\details{
JASP recognizes 3 main data types (Scale, Ordinal, Nominal),
with Nominal being further split between basic Nominal and Text.
These types roughly correspond to \code{\link[=numeric]{numeric()}}, \code{\link[=ordered]{ordered()}}, and \code{\link[=factor]{factor()}}.

However, the correspondence between the base R types is not 100\%. Thus, when passing a dataset from R to a JASP analysis,
JASP converts columns to these JASP types. Information from these columns is used for validating the input of the analysis
to ensure that the behavior is identical between R syntax and JASP application.

The conversion uses simple heuristics (e.g., \code{\link[=numeric]{numeric()}} columns are converted to \code{\link[=jaspScale]{jaspScale()}}). For overriding
these heuristics, it is possible to convert a column to a specific JASP type before passing it to an analysis.

To make it easier to reason how are these column conversion rules used within JASP, use \code{\link[=jasp2r]{jasp2r()}} and \code{\link[=r2jasp]{r2jasp()}}
functions that implement the implicit conversion rules using S3 dispatch.
Alternatively, it is possible to use functions \code{\link[=setDataSet]{setDataSet()}}, \code{\link[=getDataSet]{getDataSet()}}, and \code{\link[=dataSetColumnSpecification]{dataSetColumnSpecification()}},
that allow you to explicitly pass the data set to JASP, retrieve it, and check the column meta-data.
}
\examples{
# load mtcars
df <- mtcars
str(df)

# by default numeric columns are converted to jaspScale
r2jasp(df) |> str()

# change cyl to an ordinal variable
df$cyl <- jaspOrdinal(df$cyl, values = c(2, 4, 6, 8), labels = c("two", "four", "six", "eight"))
# change vs and am to nominal variables
df$vs  <- jaspNominal(df$vs,  labels = c("No", "Yes"))
df$am  <- jaspNominal(df$am,  labels = c("No", "Yes"))
# create a new variable that is a nominal text
df$group <- jaspNominal(rep(LETTERS[1:2], 16))

# factor and ordered will be converted to Nominal and Ordinal, respectively
df$gear <- as.factor(df$gear)
df$carb <- as.ordered(df$carb)

str(df)

# pass the data set to JASP
setDataSet(df)
# and retrieve it back
getDataSet() |> str()
# get the column specification of the set data frame as a list
dataSetColumnSpecification()

# check how are these columns converted back to R types
getDataSet() |> jasp2r() |> str()
}
